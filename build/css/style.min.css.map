{"version":3,"sources":["style.min.css","common/_svg-sprite.less","pages--external/app.less","common/icons.less","common/_png-sprite.less","style.css","common/svg-icons.less"],"names":[],"mappings":"AA+EA,mBA8BA,mBCvGI,QAAA,aCJF,QAAA,GDFF,mBDwHA,+BAMI,kBAAmB,UACnB,oBAAqB,EAAE,EC/H3B,mBAEI,MAAA,KACA,OAAA,KAEA,iBAAA,uCAEA,gBAAA,KAAA,KDoEJ,2BGzEI,iBAAA,uCH2FJ,iCARA,0BIHE,MAAA,IANA,OAAA,IANA,iBAAA,uCCqBD,oBAAA,EAAA,ELUD,kEM/FI,iCAGF,iBAAA,0CLRE,gBAAA,IAAA,KD4GJ,mBCtGI,MAAA,cACI,OAAA,cCJJ,gBAAA,kBFoHJ,+BAEI,MAAO,KACP,OAAQ,KAER,iBAAkB,uCAGlB,gBAAiB,KAAK,KAE1B,uCAEI,iBAAkB,uCAEtB,eAEI,OAAQ,MAER,iBAAkB,QAClB,iBAAkB,iCAClB,gBAAiB,KAAK","file":"style.min.css","sourcesContent":[null,".svg-sprite--html5 {\n    background-image: url(\"../img/sprites/svg/svg-sprite.svg\");\n    background-position: 0px 0px;\n    width: 47px;\n    height: 47px;\n    background-repeat: no-repeat;\n    background-size: 47px 47px;\n    .no-svg & {\n        background-image: url(\"../img/sprites/svg/svg-sprite.png\");\n    }\n}\n\n",".header{\n\n  &__inner{\n    height: 260px;\n    background-color: @header-bg;\n    background-image: url(../img/images/header-bg.png);\n    background-size: 100% 260px;\n  }\n  &__title{\n\n  }\n  &__person{\n\n  }\n  &__position{\n\n  }\n}",".png-sprite{\n  &:before{\n    content: '';\n    display: inline-block;\n  }\n\n  &--html5:before{\n    .sprite(@sprite-html5);\n  }\n\n  &--html5-retina:before{\n    .retina-sprite(@sprite-html5-group)\n  }\n}","/*\nLESS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: @icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n@icon-home: x y offset_x offset_y width height total_width total_height image_path name;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n@spritesheet: width height image @spritesheet-sprites;\n*/\n@sprite-html5-name: sprite__html5;\n@sprite-html5-x: 0px;\n@sprite-html5-y: 0px;\n@sprite-html5-offset-x: 0px;\n@sprite-html5-offset-y: 0px;\n@sprite-html5-width: 32px;\n@sprite-html5-height: 32px;\n@sprite-html5-total-width: 32px;\n@sprite-html5-total-height: 32px;\n@sprite-html5-image: '../img/sprites/png/png-sprite.png';\n@sprite-html5: 0px 0px 0px 0px 32px 32px 32px 32px '../img/sprites/png/png-sprite.png' sprite__html5;\n@sprite-html5-2x-name: sprite__html5-2x;\n@sprite-html5-2x-x: 0px;\n@sprite-html5-2x-y: 0px;\n@sprite-html5-2x-offset-x: 0px;\n@sprite-html5-2x-offset-y: 0px;\n@sprite-html5-2x-width: 64px;\n@sprite-html5-2x-height: 64px;\n@sprite-html5-2x-total-width: 64px;\n@sprite-html5-2x-total-height: 64px;\n@sprite-html5-2x-image: '../img/sprites/png/png-sprite-2x.png';\n@sprite-html5-2x: 0px 0px 0px 0px 64px 64px 64px 64px '../img/sprites/png/png-sprite-2x.png' sprite__html5-2x;\n@spritesheet-width: 32px;\n@spritesheet-height: 32px;\n@spritesheet-image: '../img/sprites/png/png-sprite.png';\n@spritesheet-sprites: @sprite-html5;\n@spritesheet: 32px 32px '../img/sprites/png/png-sprite.png' @spritesheet-sprites;\n@retina-spritesheet-width: 64px;\n@retina-spritesheet-height: 64px;\n@retina-spritesheet-image: '../img/sprites/png/png-sprite-2x.png';\n@retina-spritesheet-sprites: @sprite-html5-2x;\n@retina-spritesheet: 64px 64px '../img/sprites/png/png-sprite-2x.png' @retina-spritesheet-sprites;\n\n/*\nThese \"retina group\" variables are mappings for the naming and pairing of normal and retina sprites.\n\nThe list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.\n*/\n@sprite-html5-group-name: sprite__html5;\n@sprite-html5-group: sprite__html5 @sprite-html5 @sprite-html5-2x;\n@retina-groups: @sprite-html5-group;\n\n/*\nThe provided classes are intended to be used with the array-like variables\n\n.icon-home {\n  .sprite-width(@icon-home);\n}\n.icon-email {\n  .sprite(@icon-email);\n}\n*/\n.sprite-width(@sprite) {\n  width: extract(@sprite, 5);\n}\n\n.sprite-height(@sprite) {\n  height: extract(@sprite, 6);\n}\n\n.sprite-position(@sprite) {\n  @sprite-offset-x: extract(@sprite, 3);\n  @sprite-offset-y: extract(@sprite, 4);\n  background-position: @sprite-offset-x @sprite-offset-y;\n}\n\n.sprite-image(@sprite) {\n  @sprite-image: extract(@sprite, 9);\n  @sprite-image-bare: ~`\"@{sprite-image}\".slice(1, -1)`;\n  background-image: url(@sprite-image-bare);\n}\n\n.sprite(@sprite) {\n  .sprite-image(@sprite);\n  .sprite-position(@sprite);\n  .sprite-width(@sprite);\n  .sprite-height(@sprite);\n}\n\n/*\nThe `retina-sprite` class sets up rules and a media query for a sprite/retina sprite.\n  It should be used with a \"retina group\" variable.\n\nThe media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/\n\n@icon-home-group: 'icon-home' @icon-home @icon-home-2x;\n\n.icon-home {\n  .retina-sprite(@icon-home-group);\n}\n*/\n.sprite-background-size(@sprite) {\n  @sprite-total-width: extract(@sprite, 7);\n  @sprite-total-height: extract(@sprite, 8);\n  background-size: @sprite-total-width @sprite-total-height;\n}\n\n.retina-sprite(@retina-group) {\n  @normal-sprite: extract(@retina-group, 2);\n  @retina-sprite: extract(@retina-group, 3);\n  .sprite(@normal-sprite);\n\n  @media (-webkit-min-device-pixel-ratio: 2),\n         (min-resolution: 192dpi) {\n    .sprite-image(@retina-sprite);\n    .sprite-background-size(@normal-sprite);\n  }\n}\n\n/*\nThe `.sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of LESS\n\nThis must be run when you have at least 2 sprites.\n  If run with a single sprite, then there will be reference errors.\n\n.sprites(@spritesheet-sprites);\n*/\n.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {\n  @sprite: extract(@sprites, @i);\n  @sprite-name: extract(@sprite, 10);\n  .@{sprite-name} {\n    .sprite(@sprite);\n  }\n  .sprites(@sprites, @i + 1);\n}\n\n/*\nThe `.retina-sprites` mixin generates a CSS rule and media query for retina groups\n  This yields the same output as CSS retina template but can be overridden in LESS\n\n.retina-sprites(@retina-groups);\n*/\n.retina-sprites(@retina-groups, @i: 1) when (@i <= length(@retina-groups)) {\n  @retina-group: extract(@retina-groups, @i);\n  @sprite-name: extract(@retina-group, 1);\n  .@{sprite-name} {\n    .retina-sprite(@retina-group);\n  }\n  .retina-sprites(@retina-groups, @i + 1);\n}\n","/**************************************/\n/* Styles (LESS/CSS) files supervisor */\n/**************************************/\n/* Third party */\n/* Custom */\n/***************************************************/\n/* Set custom or change third-party Less variables */\n/***************************************************/\n/* Third party */\n/* Colors */\n/*\nLESS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: @icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n@icon-home: x y offset_x offset_y width height total_width total_height image_path name;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n@spritesheet: width height image @spritesheet-sprites;\n*/\n/*\nThese \"retina group\" variables are mappings for the naming and pairing of normal and retina sprites.\n\nThe list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.\n*/\n/*\nThe provided classes are intended to be used with the array-like variables\n\n.icon-home {\n  .sprite-width(@icon-home);\n}\n.icon-email {\n  .sprite(@icon-email);\n}\n*/\n/*\nThe `retina-sprite` class sets up rules and a media query for a sprite/retina sprite.\n  It should be used with a \"retina group\" variable.\n\nThe media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/\n\n@icon-home-group: 'icon-home' @icon-home @icon-home-2x;\n\n.icon-home {\n  .retina-sprite(@icon-home-group);\n}\n*/\n/*\nThe `.sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of LESS\n\nThis must be run when you have at least 2 sprites.\n  If run with a single sprite, then there will be reference errors.\n\n.sprites(@spritesheet-sprites);\n*/\n/*\nThe `.retina-sprites` mixin generates a CSS rule and media query for retina groups\n  This yields the same output as CSS retina template but can be overridden in LESS\n\n.retina-sprites(@retina-groups);\n*/\n.svg-sprite--html5 {\n  background-image: url(\"../img/sprites/svg/svg-sprite.svg\");\n  background-position: 0px 0px;\n  width: 47px;\n  height: 47px;\n  background-repeat: no-repeat;\n  background-size: 47px 47px;\n}\n.no-svg .svg-sprite--html5 {\n  background-image: url(\"../img/sprites/svg/svg-sprite.png\");\n}\n.png-sprite:before {\n  content: '';\n  display: inline-block;\n}\n.png-sprite--html5:before {\n  background-image: url(../img/sprites/png/png-sprite.png);\n  background-position: 0px 0px;\n  width: 32px;\n  height: 32px;\n}\n.png-sprite--html5-retina:before {\n  background-image: url(../img/sprites/png/png-sprite.png);\n  background-position: 0px 0px;\n  width: 32px;\n  height: 32px;\n}\n@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n  .png-sprite--html5-retina:before {\n    background-image: url(../img/sprites/png/png-sprite-2x.png);\n    background-size: 32px 32px;\n  }\n}\n.svg-sprite:before {\n  content: '';\n  display: inline-block;\n  width: 32px!important;\n  height: 32px!important;\n  background-size: contain!important;\n}\n.svg-sprite--html5-icon:before {\n  background-image: url(\"../img/sprites/svg/svg-sprite.svg\");\n  background-position: 0px 0px;\n  width: 47px;\n  height: 47px;\n  background-repeat: no-repeat;\n  background-size: 47px 47px;\n}\n.no-svg .svg-sprite--html5-icon:before {\n  background-image: url(\"../img/sprites/svg/svg-sprite.png\");\n}\n.header__inner {\n  height: 260px;\n  background-color: #000759;\n  background-image: url(../img/images/header-bg.png);\n  background-size: 100% 260px;\n}\n",".svg-sprite{\n  &:before{\n    content: '';\n    display: inline-block;\n    width: 32px!important;\n    height: 32px!important;\n    background-size: contain!important;\n  }\n\n  &--html5-icon:before{\n    .svg-sprite--html5();\n  }\n\n}"],"sourceRoot":"/source/"}